{%- liquid
assign secSt = section.settings
assign current_variant = product.selected_or_first_available_variant
assign featured_img_src = current_variant.featured_image.src | default: product.featured_image.src
-%}
<div class="w_100 quickShopWr" id="quickshop-{{ product.id }}" data-url="{{ product.url }}" data-section-id="{{ product.id }}" data-section-type="quickshop">
    <a class="closeShop" href="javascript:;">{% render 'icon-close' %} </a>
    <div id="price{{ product.id }}" class="priceSingle mb15" style="--pr_size:14px; --pr_sizem:12px;">
        {%- liquid
            assign compareprice = current_variant.compare_at_price
            assign price = current_variant.price
            assign money_price = price | money
            if settings.curCode
                assign money_price = price | money_with_currency
            endif
        -%}
        <p class="mb0 fl f-aic f-jcc f-wrap">
            {%- if compareprice > price -%}
                <span class="hidden_txt">{{ 'products.product.regular_price' | t }}</span>
                <s class="pr_price cmpr">{{ compareprice | money }}</s>
                <span class="pr_price orpr sale">{{ money_price }}</span>
            {%- else -%}
                <span class="hidden_txt">{{ 'products.product.regular_price' | t }}</span>
                <s class="pr_price cmpr hide">{{ compareprice | money }}</s>
                <span class="pr_price orpr">{{ money_price }}</span>
            {%- endif -%}
        </p>
        <span class="price__unit{% unless current_variant.unit_price_measurement %} hide{% endunless %}"><br />
            <span data-unit-price>{{ current_variant.unit_price | money }}</span> /
            <span data-unit-base>
                {%- if current_variant.unit_price_measurement -%}
                {%- if current_variant.unit_price_measurement.reference_value != 1 -%}{{ current_variant.unit_price_measurement.reference_value }}{%- endif -%}
                    {{ current_variant.unit_price_measurement.reference_unit }}
                {%- endif -%}
            </span>
        </span>
    </div>
    {%- assign product_form_id = 'product-form-' | append: product.id -%}
    <product-form class="product-form" style="--btnfsize :{{ blkst.btns_font }}px; --btncase:{{ blkst.btns_case }};--btnwidth:{{ blkst.btns_width }};" {{ block.shopify_attributes }}>
        {%- form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
            <div class="product-form mfp-link fl f-aie f-wrap">
                {% assign isSwatch = true %}
                {%- unless product.options.size == 1 and product.variants[0].title == 'Default Title' -%}
                    {%- for option in product.options_with_values -%}
                        {% render 'swatch', swatch: option, secId: product.id, optindex: forloop.index0 %}
                    {%- endfor -%}
                {%- endunless -%}
                <select name="id" id="ProductSelect-{{ product.id }}" data-section="{{ product.id }}" class="pr_variants no-js">
                    {%- for variant in product.variants -%}
                        {%- if variant.available -%}
                            <option{% if variant == current_variant %} selected="selected"{% endif %} value="{{ variant.id }}">{{ variant.title }}</option>
                        {%- else -%}
                            <option disabled="disabled">{{ variant.title }} - {{ 'products.product.sold_out' | t }}</option>
                        {%- endif -%}
                    {%- endfor -%}
                </select>
            </div>
            <input type="hidden" id="quantity" name="quantity" value="1" class="hide pr_input qty" />
            <div class="pform-error-wrap errors" role="alert" hidden> {% render 'icon-error' %}<span class="ml5 pform-error-msg"></span></div>
            <button type="submit" name="add" id="AddToCart-{{ product.id }}" {% unless current_variant.available %}disabled="disabled"{% endunless %} class="btn {{ settings.atc-style }} product-form__submit">
                <span class="txt">
                    {% if current_variant.available and current_variant.inventory_quantity < 1 and current_variant.inventory_management == "shopify" %}
                        {{ 'products.product.pre_order' | t }}
                    {% elsif current_variant.available %}
                        {{ 'products.product.add_to_cart' | t }}
                    {% else %}
                        {{ 'products.product.sold_out' | t }}
                    {% endif %}
                </span>
                <div class="loading-overlay__spinner hidden">{% render 'icon-loading' %}</div>
            </button>
        {%- endform -%}
    </product-form>
</div>
<script type="application/json" id="quickshopJson-{{ product.id }}">{{ product | json }}</script>
<div class="hide"><span class="prvQty" {%- for variant in product.variants -%}data-v{{ variant.id }}="{{ variant.inventory_quantity }}"{%- endfor -%}></span></div>
<script src="{{ 'quickshop.js' | asset_url }}"></script>
<script type="text/javascript">
var Shopify = Shopify || {};
Shopify.optionsMap = {};
Shopify.updateOptionsInSelector = function(selectorIndex){
    switch (selectorIndex){
        case 0:
            var key = 'root',
            selector = $('#{{ product_form_id }} {%- if isSwatch -%}.pvOpt0 .swatchInput:checked{%- else -%}.single-option-selector:eq(0){%- endif -%}');
            break;
        case 1:
            var key = $('#{{ product_form_id }} {%- if isSwatch -%}.pvOpt0 .swatchInput:checked{%- else -%}.single-option-selector:eq(0){%- endif -%}').val(),
            selector = $('#{{ product_form_id }} {%- if isSwatch -%}.pvOpt1 .swatchInput:checked{%- else -%}.single-option-selector:eq(1){%- endif -%}');
            break;
        case 2:
            var key = $('#{{ product_form_id }} {%- if isSwatch -%}.pvOpt0 .swatchInput:checked{%- else -%}.single-option-selector:eq(0){%- endif -%}').val();
            key += ' / ' + $('#{{ product_form_id }} {%- if isSwatch -%}.pvOpt1 .swatchInput:checked{%- else -%}.single-option-selector:eq(1){%- endif -%}').val();
            var selector = $('#{{ product_form_id }} {%- if isSwatch -%}.pvOpt2 .swatchInput:checked{%- else -%}.single-option-selector:eq(2){%- endif -%}');
    }
    var initialValue = selector.val();
    var availableOptions = Shopify.optionsMap[key];
    {%- if isSwatch -%}
        $('#{{ product_form_id }} .pvOpt' + selectorIndex + ' .swatch-element').each(function(){
            if($.inArray($(this).data('value').toString(), availableOptions) !== -1){
                $(this).removeClass('soldout');
            } else {
                $(this).addClass('soldout');
            }
        });
    {%- else -%}
        selector.empty();
        for (var i=0; i<availableOptions.length; i++){
            var option = availableOptions[i];
            var newOption = $('<option></option>').val(option).html(option);
            selector.append(newOption);
        }
    {%- endif -%}
    if($.inArray(initialValue, availableOptions) !== -1){
        selector.val(initialValue);
    }
    selector.trigger('change');
};
Shopify.linkOptionSelectors = function(product){
    for (var i=0; i<product.variants.length; i++){
        var variant = product.variants[i];
        if(variant.available){
            Shopify.optionsMap['root'] = Shopify.optionsMap['root'] || [];
            Shopify.optionsMap['root'].push(variant.option1);
            Shopify.optionsMap['root'] = Shopify.uniq(Shopify.optionsMap['root']);

            if(product.options.length > 1){
                var key = variant.option1;
                Shopify.optionsMap[key] = Shopify.optionsMap[key] || [];
                Shopify.optionsMap[key].push(variant.option2);
                Shopify.optionsMap[key] = Shopify.uniq(Shopify.optionsMap[key]);
            }
            if(product.options.length === 3){
                var key = variant.option1 + ' / ' + variant.option2;
                Shopify.optionsMap[key] = Shopify.optionsMap[key] || [];
                Shopify.optionsMap[key].push(variant.option3);
                Shopify.optionsMap[key] = Shopify.uniq(Shopify.optionsMap[key]);
            }
        }
    }
    Shopify.updateOptionsInSelector(0);
    if(product.options.length > 1) Shopify.updateOptionsInSelector(1);
    if(product.options.length === 3) Shopify.updateOptionsInSelector(2);
    $("#{{ product_form_id }} {%- if isSwatch -%}.pvOpt0 .swatchInput{%- else -%}.single-option-selector:eq(0){%- endif -%}").change(function(){
        Shopify.updateOptionsInSelector(1);
        if(product.options.length === 3) Shopify.updateOptionsInSelector(2);
        return true;
    });
    $("#{{ product_form_id }} {%- if isSwatch -%}.pvOpt1 .swatchInput{%- else -%}.single-option-selector:eq(1){%- endif -%}").change(function(){
        if(product.options.length === 3) Shopify.updateOptionsInSelector(2);
        return true;
    });
};
{%- if product.available and product.options.size > 1 -%}
	var $addToCartForm = $('#{{ product_form_id }}');
	if(window.MutationObserver && $addToCartForm.length){
		if(typeof observer === 'object' && typeof observer.disconnect === 'function'){
			observer.disconnect();
		}
		var config = { childList: true, subtree: true };
		var observer = new MutationObserver(function(){
			observer.disconnect();
		});
		observer.observe($addToCartForm[0], config);
	}
	Shopify.linkOptionSelectors(JSON.parse(document.getElementById('quickshopJson-{{ product.id }}').innerHTML));

{%- elsif product.options.size == 1 -%}
	{%- for variant in product.variants -%}
		{%- unless variant.available -%}
			//$('.single-option-selector option').filter(function(){ return $(this).html() === {{ variant.title | json }}; }).remove();
			$("#{{ product_form_id }} .swatch-element[data-value='{{ variant.title | escape }}']").addClass('soldout');
		{%- endunless -%}
	{%- endfor -%}
	$('#{{ product_form_id }} .single-option-selector').trigger('change');
{%- endif -%}
</script>
{% schema %}
  {
    "name": "quick-shop",
    "class": "fl f-aic f-jcc w_100 h_100 quick_shop",
    "settings": []
  }
{% endschema %}